-- Cluster
CREATE CLUSTER CLUSTER_USER_TICKET (id NUMBER)
  TABLESPACE users
  SIZE 1024;

CREATE CLUSTER CLUSTER_DEVICE (id NUMBER)
  TABLESPACE users
  SIZE 1024;

-- Table_clustering
CREATE TABLE USER (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100),
    first_name VARCHAR2(100)
) CLUSTER CLUSTER_USER_TICKET (id);

CREATE TABLE TICKET (
    id NUMBER PRIMARY KEY,
    subject VARCHAR2(255),
    description CLOB,
    statut VARCHAR2(50),
    date DATE,
    user_id NUMBER,
    CONSTRAINT FK_TICKET_USER FOREIGN KEY (user_id) REFERENCES USER(id)
) CLUSTER CLUSTER_USER_TICKET (id);

CREATE TABLE DEVICE (
    id NUMBER PRIMARY KEY,
    description VARCHAR2(255),
    type VARCHAR2(100),
    price NUMBER(10,2),
    ip_address VARCHAR2(15),
    buying_date DATE,
    guaranty_expiration_date DATE
) CLUSTER CLUSTER_DEVICE (id);

-- Index pour les cluster
CREATE INDEX IDX_CLUSTER_USER_TICKET ON CLUSTER CLUSTER_USER_TICKET;
CREATE INDEX IDX_CLUSTER_DEVICE ON CLUSTER CLUSTER_DEVICE;

-- Partitionnement
CREATE TABLE INTERVENTION (
    id NUMBER PRIMARY KEY,
    date DATE,
    price NUMBER(10,2),
    description VARCHAR2(255),
    type VARCHAR2(100)
)
PARTITION BY RANGE (date) (
    PARTITION p_old VALUES LESS THAN (TO_DATE('2020-01-01', 'YYYY-MM-DD')),
    PARTITION p_recent VALUES LESS THAN (TO_DATE('2025-01-01', 'YYYY-MM-DD')),
    PARTITION p_future VALUES LESS THAN (MAXVALUE)
);

CREATE TABLE DEVICE (
    id NUMBER PRIMARY KEY,
    description VARCHAR2(255),
    type VARCHAR2(100),
    price NUMBER(10,2),
    ip_address VARCHAR2(15),
    buying_date DATE,
    guaranty_expiration_date DATE
)
PARTITION BY LIST (type) (
    PARTITION p_laptop VALUES ('Laptop'),
    PARTITION p_server VALUES ('Server'),
    PARTITION p_other VALUES (DEFAULT)
);

-- Table
CREATE TABLE PERMISSIONS (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100)
);

CREATE TABLE GROUPS (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100)
);

CREATE TABLE NETWORK (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100),
    alias VARCHAR2(50),
    ip_address VARCHAR2(15),
    ip_mask VARCHAR2(15)
);

CREATE TABLE PROJECT (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100),
    description CLOB
);

CREATE TABLE LICENCE_DEVICE (
    id NUMBER PRIMARY KEY,
    price NUMBER(10,2),
    expiration_date DATE,
    buying_date DATE,
    device_id NUMBER,
    CONSTRAINT FK_LICENCE_DEVICE FOREIGN KEY (device_id) REFERENCES DEVICE(id)
);

CREATE TABLE VM (
    id NUMBER PRIMARY KEY,
    description VARCHAR2(255)
);

-- Contraintes et relations pour Oracle
ALTER TABLE TICKET ADD CONSTRAINT FK_TICKET_USER FOREIGN KEY (user_id) REFERENCES USER(id);
ALTER TABLE DEVICE ADD CONSTRAINT FK_DEVICE_NETWORK FOREIGN KEY (id) REFERENCES NETWORK(id);
ALTER TABLE LICENCE_DEVICE ADD CONSTRAINT FK_LICENCE_DEVICE FOREIGN KEY (device_id) REFERENCES DEVICE(id);
